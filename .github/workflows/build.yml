name: Build

on:
  [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        arch: [ x86_64, aarch64 ]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: stable

      - name: Set up cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-cache-${{ runner.os }}

      - name: Build project
        run: cargo build --release

      - name: Upload artifact
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: spot-${{ matrix.os }}-${{ matrix.arch }}
          path: target/release/Spot

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: spot-${{ matrix.os }}-${{ matrix.arch }}
          path: target/release/Spot.exe